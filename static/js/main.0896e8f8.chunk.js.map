{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosWithUsers","userId","usersFromServer","find","person","App","useState","setTodo","todoTitle","setTodoTitle","todoUser","setTodoUser","todoTitleError","setTodoTitleError","todoUserError","setTodoUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","type","placeholder","value","onChange","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0896e8f8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={\n        cn('TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user\n      && <UserInfo user={todo.user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUsers: Todo[] = todosFromServer.map((todo) => {\n  const user = usersFromServer.find((person) => todo.userId === person.id);\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>(todosWithUsers);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoUser, setTodoUser] = useState(0);\n  const [todoTitleError, setTodoTitleError] = useState(false);\n  const [todoUserError, setTodoUserError] = useState(false);\n\n  const resetForm = () => {\n    setTodoTitle('');\n    setTodoUser(0);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoUser(+event.target.value);\n    setTodoUserError(false);\n  };\n\n  const handleTodoTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setTodoTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setTodoTitleError(() => true);\n    }\n\n    if (!todoUser) {\n      setTodoUserError(() => true);\n    }\n\n    if (!todoTitle || !todoUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todos.map((todo) => todo.id)) + 1,\n      title: todoTitle,\n      completed: false,\n      userId: todoUser,\n      user: usersFromServer.find((person) => todoUser === person.id),\n    };\n\n    setTodo((prevTodos) => [...prevTodos, newTodo]);\n\n    resetForm();\n  };\n\n  // console.log(todos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTodoTitle}\n          />\n          {todoTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            defaultValue=\"0\"\n            value={todoUser}\n            onChange={handleUserId}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {todoUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}